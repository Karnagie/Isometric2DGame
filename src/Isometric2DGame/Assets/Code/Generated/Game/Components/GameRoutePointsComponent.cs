//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRoutePoints;

    public static Entitas.IMatcher<GameEntity> RoutePoints {
        get {
            if (_matcherRoutePoints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RoutePoints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRoutePoints = matcher;
            }

            return _matcherRoutePoints;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Core.Features.Routing.RoutePoints routePoints { get { return (Code.Core.Features.Routing.RoutePoints)GetComponent(GameComponentsLookup.RoutePoints); } }
    public System.Collections.Generic.List<UnityEngine.Vector2> RoutePoints { get { return routePoints.Value; } }
    public bool hasRoutePoints { get { return HasComponent(GameComponentsLookup.RoutePoints); } }

    public GameEntity AddRoutePoints(System.Collections.Generic.List<UnityEngine.Vector2> newValue) {
        var index = GameComponentsLookup.RoutePoints;
        var component = (Code.Core.Features.Routing.RoutePoints)CreateComponent(index, typeof(Code.Core.Features.Routing.RoutePoints));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRoutePoints(System.Collections.Generic.List<UnityEngine.Vector2> newValue) {
        var index = GameComponentsLookup.RoutePoints;
        var component = (Code.Core.Features.Routing.RoutePoints)CreateComponent(index, typeof(Code.Core.Features.Routing.RoutePoints));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRoutePoints() {
        RemoveComponent(GameComponentsLookup.RoutePoints);
        return this;
    }
}
