//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTextField;

    public static Entitas.IMatcher<GameEntity> TextField {
        get {
            if (_matcherTextField == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TextField);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTextField = matcher;
            }

            return _matcherTextField;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Core.Features.Ui.TextField textField { get { return (Code.Core.Features.Ui.TextField)GetComponent(GameComponentsLookup.TextField); } }
    public TMPro.TMP_Text TextField { get { return textField.Value; } }
    public bool hasTextField { get { return HasComponent(GameComponentsLookup.TextField); } }

    public GameEntity AddTextField(TMPro.TMP_Text newValue) {
        var index = GameComponentsLookup.TextField;
        var component = (Code.Core.Features.Ui.TextField)CreateComponent(index, typeof(Code.Core.Features.Ui.TextField));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTextField(TMPro.TMP_Text newValue) {
        var index = GameComponentsLookup.TextField;
        var component = (Code.Core.Features.Ui.TextField)CreateComponent(index, typeof(Code.Core.Features.Ui.TextField));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTextField() {
        RemoveComponent(GameComponentsLookup.TextField);
        return this;
    }
}
